repos:
-   repo: local
    hooks:
    - id: check-data-write-env
      alias: error
      name: check-data-write-env
      description: Check write env is always CURRENT_ENV and is takes from env. variable
      entry: python cqtools/checks/check_data_write_env.py
      language: system
      types: ["python"]
      files: "tests/test_files/*"

    - id: check-display-function
      alias: error
      name: check-display-function
      description: Check presence of display() function
      entry: python cqtools/checks/check_display_function.py
      language: system
      types: ["python"]
      files: "tests/test_files/*"

    - id: check-magic-commands
      alias: error
      name: check-magic-commands
      description: Check presence of magic commands
      entry: python cqtools/checks/check_magic_commands.py
      language: system
      types: ["python"]
      files: "tests/test_files/*"
    
    - id: check-adaptive-query
      alias: warning
      name: check-adaptive-query
      description: Check adaptive query optimization is turned on 
      entry: python cqtools/checks/check_adaptive_query.py
      language: system
      types: ["python"]
      files: "tests/test_files/*"
    
    - id: check-distinct-count
      alias: warning
      name: check-distinct-count
      description: Contains distinct more than 5 times 
      entry: python cqtools/checks/check_distinct_count.py
      language: system
      types: ["python"]
      files: "tests/test_files/*"

    - id: check_cache_unpersist
      alias: warning
      name: check_cache_unpersist
      description: Check that cache() and unpersist() are called same number of times
      entry: python cqtools/checks/check_cache_unpersist.py
      language: system
      types: ["python"]
      files: "tests/test_files/*"

    - id: check-hardcoded-env
      alias: error
      name: check-hardcoded-env
      description: Contains hardcoded environment name
      entry: python cqtools/checks/check_hardcoded_env.py
      language: system
      types: ["python"]
      files: "tests/test_files/src/*"

    - id: check-adf-executes-ntb
      alias: error
      name: check-adf-executes-ntb
      description: Contains hardcoded environment name
      entry: python cqtools/checks/check_adf_executes_ntb.py
      language: system
      types: ["file"]
      files: tests\/test_files\/src\/job_.*\.py$
      require_serial: true
    
    - id: check-adf-executes-pipeline
      alias: error
      name: check-adf-executes-pipeline
      description: Contains hardcoded environment name
      entry: python cqtools/checks/check_adf_executes_pipeline.py
      language: system
      types: ["file"]
      files: tests\/test_files\/src\/.*\.(json)$
      require_serial: true

-   repo: https://github.com/pre-commit/mirrors-pylint
    rev: v2.3.1
    hooks:
    -   id: pylint
        alias: warning
        name: check-exec-function
        description: Check presence of exec function
        args:
        - --max-line-length=80
        - --ignore-imports=yes
        - -d all
        - -e W0122
        - --score=no
        types: ["python"]
        files: "tests/test_files/*"
    -   id: pylint
        alias: warning
        name: check-variable-error
        description: Check variable assignment
        args:
        - --max-line-length=80
        - --ignore-imports=yes
        - -d all
        - -e E0601,E0611
        - --score=no
        types: ["python"]
        files: "tests/test_files/*"
    -   id: pylint
        alias: error
        name: check-syntax-errors
        description: Check syntax errors (except for variable errors)
        args:
        - --max-line-length=80
        - --ignore-imports=yes
        - -d all
        - -e E01*,E02*,E03*,E04*,E05*,E07*,E08*,E09*,E1*
        - --score=no
        types: ["python"]
        files: "tests/test_files/*"

-   repo: https://github.com/PyCQA/bandit
    rev: 1.6.2
    hooks:
    -   id: bandit
        alias: security
        name: bandit
        description: Run security linter
        args: ['-r', '-a=file', '-q', '--format=custom', '--msg-template={abspath}: {line}: {test_id}[{severity}]: {msg}']
        types: ["python"]
        files: "tests/test_files/*"